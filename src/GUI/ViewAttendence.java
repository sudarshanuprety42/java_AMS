/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Database.DbOperation;
import static GUI.Admins_Dashboard.buildTableModel;
import java.awt.Dialog;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sudarsan
 */
public class ViewAttendence extends javax.swing.JDialog {

    /**
     * Creates new form ViewAttendence
     */
    public ViewAttendence() throws SQLException {
        initComponents();
        
        this.setLocationRelativeTo(null);
//        this.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        
        DbOperation dopt=new DbOperation();
        ResultSet rs = dopt.viewAttendence();
        attendenceTable.setModel(buildTableModel(rs));
    }
        public static DefaultTableModel buildTableModel(ResultSet rs)
            throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        attendenceTable = new javax.swing.JTable();

        attendenceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        attendenceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                attendenceTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(attendenceTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void attendenceTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendenceTableMouseReleased
ViewReason vr = null;
        Object a = null;

        try {
            String s = attendenceTable.getColumnName(attendenceTable.getSelectedColumn());
            int pos = s.indexOf('_');
            String s1 = s.substring(0, 1);
            String s2 = s.substring(1, pos);
            String s3 = s.substring(pos + 1, pos + 2);
            String s4 = s.substring(pos + 2, s.length());
            String news = s1.toUpperCase() + s2 + "_" + s3.toUpperCase() + s4;
            System.out.println(news);
            vr = new ViewReason(attendenceTable.getModel().getValueAt(attendenceTable.getSelectedRow(), 0).toString(), news);
            vr.setVisible(true);

        } catch (SQLException ex) {
            Logger.getLogger(Admins_Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (evt.getClickCount() == 2) {
            vr.setVisible(false);
            vr.dispose();
            boolean c;
            a = attendenceTable.getModel().getValueAt(attendenceTable.getSelectedRow(), attendenceTable.getSelectedColumn());
            if (a.toString().equals("true")) {

                c = false;
            } else {
                c = true;
            }
            String d = attendenceTable.getModel().getValueAt(attendenceTable.getSelectedRow(), 0).toString();
            DbOperation dopt = new DbOperation();
            dopt.updateAttendence(attendenceTable.getColumnName(attendenceTable.getSelectedColumn()), c, d);

            ResultSet rs = dopt.viewAttendence();
            try {
                attendenceTable.setModel(buildTableModel(rs));
            } catch (SQLException ex) {
                Logger.getLogger(Admins_Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            a = attendenceTable.getModel().getValueAt(attendenceTable.getSelectedRow(), attendenceTable.getSelectedColumn());
            if (a.toString().equals("true")) {
                vr.dispose();
            }
        }  // TODO add your handling code here:
    }//GEN-LAST:event_attendenceTableMouseReleased

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable attendenceTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
